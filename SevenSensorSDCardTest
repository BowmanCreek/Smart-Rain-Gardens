#include <Wire.h>
#include <SPI.h>
#include <SD.h>

//Digital pin 12 is the MicroSD slave select pin on the Mayfly
#define SD_SS_PIN 12

//The data log file
#define FILE_NAME "DataLog.txt"

//Data header  (these lines get written to the beginning of a file when it's created)
#define LOGGERNAME "Mayfly microSD Card Tester"
#define DATA_HEADER "SampleNumber, Sensor 1, Sensor 2, Sensor 3, Sensor 4, Sensor 5, Sensor 6, Sensor 7"

int sampleinterval = 1;    //time between samples, in seconds

int samplenum = 1;      // declare the variable "samplenum" and start with 1
int analogNum = 0;
float sensorVal;
float vwc;
float voltage;

void setup() 
{
  //Initialise the Serial connection
  Serial.begin(9600);
  //Initialise log file
  setupLogFile();
  
  //Echo the data header to the Serial connection
  Serial.println(DATA_HEADER);
  
}

void loop() 
{
  String dataRec = createDataRecord();
  
  //Save the data record to the log file
  logData(dataRec);
  
  //Echo the data to the Serial1 connection
  Serial.println(dataRec);
  
  delay(sampleinterval*1000);   //multiply by 1000 to convert from milliseconds to seconds

}


void setupLogFile()
{
  //Initialise the SD card
  if (!SD.begin(SD_SS_PIN))
  {
    Serial.println("Error: SD card failed to initialise or is missing.");
    //Hang
  //  while (true); 
  }
  
  //Check if the file already exists
  bool oldFile = SD.exists(FILE_NAME);  
  
  //Open the file in write mode
  File logFile = SD.open(FILE_NAME, FILE_WRITE);
  // write to file if old file exists
  //Add header information if the file did not already exist
  if (!oldFile)
  {
    logFile.println(LOGGERNAME);
    logFile.println(DATA_HEADER);
  }
  
  //Close the file to save it
  logFile.close();  
}


void logData(String rec)
{
  //Re-open the file
  File logFile = SD.open(FILE_NAME, FILE_WRITE);
  
  //Write the CSV data
  logFile.println(rec);
  
  //Close the file to save it
  logFile.close();  
}

String createDataRecord()
{
  //Create a String type data record in csv format
  //SampleTime, Moisture
  //String data = "Time: ";
  //data += rtc.getUnixTime(rtc.getTime());
  //data += ", Moistures: ";
  String data = "Sample number: ";
  data += samplenum;
  data += ",  Soil moisture (1-7): "; 
  for (analogNum = 0; analogNum <= 7; analogNum++){
   if (analogNum == 6){
    analogNum = 7;
   }
  sensorVal = analogRead(analogNum); //read soil moisture sensor
  voltage =(sensorVal/1023)*3; //conversion to voltage from analog
  
  
  // following if statement is a calibration for percent moisture from manufacturer
  if(voltage <= 1.1)
  {
    vwc = 10*voltage;
    }
  else if(voltage <= 1.3)
  {
    vwc = 25*voltage-17.5;
    }
  else if(voltage <= 1.82)
  {
    vwc = 48.08*voltage-47.5;
    }
  else if(voltage <= 2.2)
  {
    vwc = 26.32*voltage-7.89;
    }
 else vwc = 0;
  data += vwc;     //adds the battery voltage to the data string
  data += ", ";
  }
  
  //Print data to screen
  Serial.println(data);
  samplenum++;
  return data;
}
